services:
  project:
    build:
      context: .

    ports:
      - 5050:5050

    networks:
      - project-net

  postgres:
    image: postgres:16.4-alpine
    container_name: postgresql
    volumes:
      - pg-data:/var/lib/postgres:rw
      - ./config_files/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./db/sql:/docker-entrypoint-initdb.d:ro

    networks:
      - project-net

    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  haproxy:
    image: haproxy:3.0.3-alpine
    container_name: haproxy
    volumes:
      - ./config_files/haproxy.cfg:/usr/local/etc/haproxy:ro

    networks:
      - project-net

  ngrok:
    image: ngrok/ngrok:3-alpine
    container_name: ngrok
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./config_files/ngrok.yml:/etc/ngrok.yml:ro

    ports:
      - 4040:4040

    networks:
      - project-net


volumes:
  pg-data:

networks:
  project-net: